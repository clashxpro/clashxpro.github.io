<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashxpro.github.io/news/article-31423.htm" />
    <meta name="theme-color" content="#c70039">
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>React中事件的写法总结</title>
        <meta name="description" content="首先我们先查看官方规则或者官方文档的介绍，React的事件处理和DOM元素很相似，但是语法上是有不同的：  1、react事件采用驼峰命名法，而不是纯小写。驼峰命名法(camelCase)：命名的全部" />
        <link rel="icon" href="/assets/website/img/clashxpro/favicon.ico" type="image/x-icon"/>
    <!-- Start Stylesheet -->
    <link href="/assets/website/css/clashxpro/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/bootsnav.css" rel="stylesheet" />
    <link href="/assets/website/css/clashxpro/style.css" rel="stylesheet">
    <link href="/assets/website/css/clashxpro/responsive.css" rel="stylesheet" />
    <!-- Google Web Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700,800" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-W0EDBJFLX5"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-W0EDBJFLX5');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Header -->
    <header id="home">
        <!-- Start Navigation -->
        <nav class="navbar navbar-default navbar-fixed white no-background bootsnav">
            <div class="container">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu"> <i class="fa fa-bars"></i> </button>
                    <a class="navbar-brand" href="/">
                                                <span>ClashX Pro</span>
                                            </a>
                </div>
                <!-- End Header Navigation -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="#" data-out="#">
                                                <li><a href="/">首页</a></li>
                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                <li><a href="/news/">新闻资讯</a></li>
                                                <li><a href="#">关于</a></li>
                        <li><a href="#">联系</a></li>
                    </ul>
                </div>
                <!-- /.navbar-collapse -->
            </div>
        </nav>
        <!-- End Navigation -->
    </header>
    <!-- End Header -->
    <!-- Start Page Heading -->
    <div class="utf-page-heading shadow dark bg-fixed text-light" style="background-image: url(assets/img/banner/breadcrum.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>React中事件的写法总结</h1>
                    <div class="utf-breadcrumb-items">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Heading -->
    <!-- Start Portfolio -->
    <div id="portfolio" class="utf-portfolio-area-item default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>首先我们先查看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://link.zhihu.com/?target=https%3A//react.docschina.org/docs/handling-events.html"  rel="nofollow">官方规则或者官方文档的介绍</a>，React的事件处理和DOM元素很相似，但是语法上是有不同的：</p> <blockquote> <p>1、react事件采用驼峰命名法，而不是纯小写。<br /><strong>驼峰命名法</strong>(camelCase)：命名的全部全称， 首个单词全部小写后面每个单词的首字母大写。<br /> eg: getElementById onClick<br /> 2、使用JSX语法的时候需要传入一个函数作为事件处理函数， 而不是一个字符串</p> </blockquote> <p><strong>了解基本的以后 ， 下面我们利用九个例子来进行事件的巩固：</strong></p> <h2> <a id="1_11" rel="nofollow"></a><strong>1、普通匿名函数的直接绑定</strong><br /> </h2> <pre><code>按钮1 </code></pre> <p>给onClick后面直接绑定函数，点击以后，就会执行函数里面的内容。</p> <h2> <a id="2_19" rel="nofollow"></a>2、使用箭头函数代替匿名的绑定</h2> <pre><code class="prism language-html">&lt;button onClick={()=&gt;{        alert("点击触发匿名函数"); }}&gt;按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  </code></pre> <h2> <a id="3event_27" rel="nofollow"></a>3、箭头函数中获取事件源(等同于原生的event对象)</h2> <pre><code class="prism language-html">&lt;button onClick={(e)=&gt;{       e.target.style.color="red"; }}&gt;点击以后按钮就会变成红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  </code></pre> <p>e就是默认的事件参数 e中的target表示事件发生的目标元素 点击以后按钮就会变成红色</p> <h2> <a id="4_37" rel="nofollow"></a>4、将匿名函数分离封装</h2> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span>{<!-- --></span>         <span class="token attr-name">this.show</span> <span class="token attr-name">}</span><span class="token punctuation">&gt;</span></span>点击调用外面的函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>点击按钮以后 触发外面声明的show方法 show方法定义如下</p> <pre><code class="prism language-js">  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span>             num<span class="token punctuation">:</span><span class="token number">10</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>       <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"按钮4被点击 但是里面this会脱离上下文关系"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//报错 this是undefined</span>     <span class="token punctuation">}</span>  </code></pre> <p>可以弹框提示 ， 但是会有this指向的问题 ， 接下来 我们看第五步的加强</p> <h2> <a id="5_this__64" rel="nofollow"></a>5、利用箭头函数 对this指向进行加强 改写的代码如下</h2> <pre><code class="prism language-html">&lt;button onClick={          this.show//参数问题就看第六点 }&gt;调用函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  </code></pre> <p>点击以后num就能得到改变</p> <h2> <a id="6__75" rel="nofollow"></a>6、再来研究箭头函数中参数的问题 如果调用的时候带走参数</h2> <pre><code class="prism language-html">&lt;button onClick={//show6能带参数         ()=&gt;{               this.show6("我是参数")           } }&gt;调用带有参数的函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>方法定义的如下 show6为一个箭头函数， content就是形参 ，接受的值为我是参数</p> <pre><code class="prism language-js"> <span class="token function-variable function">show6</span><span class="token operator">=</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         <span class="token function">alert</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h2> <a id="7_93" rel="nofollow"></a>7、事件函数触发是带参数和事件源</h2> <pre><code class="prism language-html">  &lt;button onClick={//show7能带参数 还能带事件源          (e)=&gt;{                this.show7("7777",e);           }   }&gt;带走参数和事件源<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  </code></pre> <p>show7中第二个参数e需要特别处理， 在(e)中声明 才能带出去， 不然e会是没有定义。</p> <p>方法的定义部分</p> <pre><code class="prism language-js">  <span class="token function-variable function">show7</span><span class="token operator">=</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span> content<span class="token punctuation">;</span>   <span class="token punctuation">}</span> </code></pre> <p>content就是参数"7777" ，e就是事件源， 通过事件源可以找到目标元素， 然后更新里面的内容</p> <h2> <a id="8_bindbind_bindthis_116" rel="nofollow"></a>8、不使用箭头函数 使用bind加强(bind里面的第一个参数 表示bind前面函数声明里面this的指向)</h2> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span>{this.show8.bind(this)}</span><span class="token punctuation">&gt;</span></span>bind加强<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>方法定义的地方</p> <pre><code class="prism language-js"> <span class="token function">show8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"bind绑定"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h2> <a id="9bind__130" rel="nofollow"></a>9、改写bind 贴近官方推荐写法</h2> <pre><code class="prism language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span>{this.show9}</span> <span class="token punctuation">&gt;</span></span>bind写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>在show9定义中</p> <pre><code class="prism language-js"> <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span>             num<span class="token punctuation">:</span><span class="token number">10</span>         <span class="token punctuation">}</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>show9 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>show9<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//bind的提升 调用的写法和8就不一样了</span>     <span class="token punctuation">}</span>     <span class="token function">show9</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  </code></pre> <p><strong>总结:</strong></p> <p>react中事件的使用和原生的事件使用极其相似，我们需要解决，函数函数的声明和参数的传递 使用，根据自己的实际情况，合理使用就可以了，不管是箭头函数和普通函数，实际都是殊途同归。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-31064.htm">美联众合动物医院总部 美联众合动物医院总部电话</a></p>
                                        <p>下一个：<a href="/news/article-31424.htm">农大动物医院电话号码是多少（农大动物医院急诊电话）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-14-node-share.htm" title="ClashX Pro节点订阅每天更新20.7M/S免费节点订阅链接">ClashX Pro节点订阅每天更新20.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-24972.htm" title="考宠物医师需要什么条件才能考（想考宠物医师资格证）">考宠物医师需要什么条件才能考（想考宠物医师资格证）</a></li>
                        <li class="py-2"><a href="/news/article-19453.htm" title="狗狗领养协议图片高清（狗狗领养协议怎么写）">狗狗领养协议图片高清（狗狗领养协议怎么写）</a></li>
                        <li class="py-2"><a href="/news/article-23119.htm" title="宠物医生资质好考吗（考取宠物医生资格证）">宠物医生资质好考吗（考取宠物医生资格证）</a></li>
                        <li class="py-2"><a href="/news/article-26833.htm" title="宠物领养收费吗现在多少钱（宠物领养是什么意思,免费的嘛）">宠物领养收费吗现在多少钱（宠物领养是什么意思,免费的嘛）</a></li>
                        <li class="py-2"><a href="/news/article-21287.htm" title="Centos7系统离线安装nginx步骤(亲测，超详细步骤)">Centos7系统离线安装nginx步骤(亲测，超详细步骤)</a></li>
                        <li class="py-2"><a href="/news/article-19916.htm" title="流浪猫养多久才不会跑（流浪猫养多久才不会跑来跑去）">流浪猫养多久才不会跑（流浪猫养多久才不会跑来跑去）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-11-node-share.htm" title="ClashX Pro节点订阅每天更新22.5M/S免费节点订阅链接">ClashX Pro节点订阅每天更新22.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-23566.htm" title="猫咪一生认几个主人不同阶段年龄（一只猫认几个主人）">猫咪一生认几个主人不同阶段年龄（一只猫认几个主人）</a></li>
                        <li class="py-2"><a href="/news/article-28231.htm" title="动物防疫站几点关门 动物防疫站几点关门啊">动物防疫站几点关门 动物防疫站几点关门啊</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End Portfolio -->
        <!-- Start Footer -->
    <footer class="text-center bg-dark text-light">
        <div class="container">
            <div class="row">
                <div class="col-md-8 copyright text-left">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">ClashX Pro免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-md-4 utf-footer-social text-right">
                    <ul>
                        <li class="facebook"><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li class="linkedin"><a href="#"><i class="fab fa-linkedin"></i></a></li>
                        <li class="twitter"><a href="#"><i class="fab fa-twitter"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery Style -->
    <script src="/assets/website/js/frontend/clashxpro/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/equal-height.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/modernizr.custom.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/count-to.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/bootsnav.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/typed.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/YTPlayer.min.js"></script>
    <script src="/assets/website/js/frontend/clashxpro/custom_script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>